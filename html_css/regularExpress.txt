JavaScript中的正则表达式：
	正则表达式是写在一对//中
	直接量字符：
		数字和字母匹配本身
		\o 匹配NUL字符
		\t 匹配制表符 (\u009)
		\n 匹配换行符
		\v 匹配垂直制表符
		\f 匹配换页符
	具有特殊含义的标点符号
		^ $ . * + ? = ! : | \ / ( ) [ ] { }
	字符类
		[...]方括号内的任意字符
		[^ ...]不在括号内的任意字符
		. 除换行符和其他Unicode行终止符之外的任意字符
		\w 任何ASCII字符组成的单词等价于[a-zA-Z0-9]
		\W 任何不是ASCII字符组成的单词，等价于[^a-zA-Z0-9]
		\s 任何Unicode空白符
		\S 任何非Unicode空白的字符
		\d 任何ASCII数字 等价于[0-9]
		\D  任何非ASCII数字，等价于[^0-9]
		[\b] 退格直接量
	重复
		{n,m} 匹配前一项至少n次，但是不能超过m次
		{n,} 匹配前一项至少n次或者更多次
		{n} 匹配前一项至少n次
		？匹配前一项0次或者1次，也就是说前一项是可选的，等价于{0,1}
		+ 匹配前一项一次或者多次，等价于{1,}
		* 匹配前一项0次或者多次，等价于{0,}
	非贪婪重复
		非贪婪模式是在待匹配的字符后面跟随一个问号?
		需要注意的是，正则表达式的模式匹配总是会寻找字符串中的第一个可能匹配的位置。
	选择分组和引用
		