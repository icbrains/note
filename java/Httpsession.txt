容器必须以某种方式把会话ID作为响应的一部分交给客户，而客户必须把会话ID作为请求的一部分发回

最简单的方式是通过cookie交换这个会话ID信息

如果浏览器禁用cookie的时候，而且只有告诉响应要对URL编码，URL重写才能生效

encodeURL只与response有关，也就是说只与响应有关

设置会话超时的方式：
	会话的三种死法
	超时
	你在会话对象上调用invalidate()
	应用结束（崩溃或取消部署）
	
cookie实际上是客户与服务器之间交换的一段小数据
cookie的一大妙处是用户不必要介入，cookie交换是自动完成的

session身份识别，安全验证

page指令的作用是为容器提供一些信息

使用pageContext获得和这只属性
<%pageContext.setAttribute("love","玫瑰",PageContext.SESSION_SCOPE);%>这段代码设置
了一个key为love，value为玫瑰的session

要想在jsp中禁用脚本，就必须在web.xml配置文件中配置scripting-invalid标记使用false

jsp元素：scriptlet<% ;%>、指令<%@ %>、声明<%! %>、java表达式<%=%>、EL表达式、动作：<jsp:.../>
<jsp:useBean></jsp:useBean>体，它的type属性来指定它的引用类型，class属性来指定它的对象类型

EL表达式的点号的左边必须是一个MAP或者Bean，点号右边必须是一个bean属性或者map的key值，右边必须是一个规范的java有关标识符的命名规则

EL表达式的[]有更多的选择，左边可以使map、List、Bean，Array，括号里可以是String的直接量，可以是Map的键，或者是bean的一个性质，还可以是List或者数组中的索引

需要特别注意的是，数组和List集合中的String索引会强制转化为int

EL调用类中的方法需要的条件
被调用的方法必须是public static [返回值可有可无] methodName ([参数1，参数2，...]){};
创建一个放置在WEB-INF目录下的TLD文件
配置TLD文件
在jsp页面中使用taglib指令调用TLD配置文件

在EL表达式中，能够很好的处理null的值，有如下情况
①在EL的算数运算中，对于不知道的变量，默认值为0
②在El的逻辑运算中，对于不知道的变量，默认值为false
③在EL的表达式中，对于不知道的变量，什么也不会打印，更不会抛出异常

用户对servlet的请求，每个用户的请求都在一个单独的线程中

servletConfig对象
	每个servlet都有一个ServletConfig对象
	用于向servlet传递部署时信息（例如数据库或企业bean的查找名）
	用于访问ServletContext
	参数在部署描述文件中配置
ServletContext
	每个web应用有一个ServletContext
	用于访问web应用参数（也在部署描述文件中配置）
	相当于一种应用公告栏，可以在这里放置消息(称之为属性)，应用的其他部分可以访问这些消息
	用于得到服务器的信息，包括容器名和容器版本，以及所支持API的版本等

HttpservletRequest、HttpservletResponse分别来自ServletRequest、ServletResponse
HttpServlet的大多数实现实际上都来自于GenericServlet

监听器只能监听request、session、servletContext

获得ServletContext的几种方法
	servlet中使用this.getServletContext();


































